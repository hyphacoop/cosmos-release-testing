---

name: Test Gaia Stateful Upgrade - v19
on:
  repository_dispatch:
    types: [new_main_build]
  workflow_dispatch:
  # schedule:
    # Once a day at 13:15
    # - cron: '15 13 * * 1'
  # push:
concurrency:
  group: self-hosted-runners
jobs:
  set-version-matrix:
    runs-on: ubuntu-22.04
    steps:
      # Get system info
      - run: ifconfig
      - run: arp -a
      - run: sudo dmidecode
      - run: df -h
      - run: free -m
      - run: uname -a
      - run: lsb_release -a
      - run: echo "GitHub branch is ${{ github.ref }}"
      - run: whoami
      - run: pwd
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests
      - name: Get latest gaiad stable release
        run: |
          GAIA_LATEST=$(curl --silent "https://api.github.com/repos/cosmos/gaia/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Latest version of gaiad is: $GAIA_LATEST"
          echo "GAIA_LATEST=$GAIA_LATEST" >> $GITHUB_ENV
      - name: Generate starting versions
        id: generate-start
        run: |
          start=$(scripts/generate_version_matrix.py $GAIA_LATEST)
          echo $start
          echo "start_versions=$start" >> $GITHUB_OUTPUT
      - name: Generate upgrade versions
        id: generate-upgrade
        run: |
          upgrade=$(scripts/stateful/generate_upgrade_matrix_v19.py $GAIA_LATEST)
          echo $upgrade
          echo "upgrade_versions=$upgrade" >> $GITHUB_OUTPUT
    outputs:
      upgrade_versions: ${{ steps.generate-upgrade.outputs.upgrade_versions }}

  test-upgrade-mainnet:
    needs: set-version-matrix
    strategy:
      matrix:
        ${{ fromJSON(needs.set-version-matrix.outputs.upgrade_versions) }}
      fail-fast: false
      #max-parallel: 3
    with:
      runs-on-os: cosmos-runner-set
      gaia_version: ${{ matrix.gaia_version }}
      upgrade_version: ${{ matrix.upgrade_version }}
      env_name: major-upgrade-stateful-workflow
      archive_url: https://files.polypore.xyz/archived-state/latest_v18.tar.gz
    uses: ./.github/workflows/upgrade-gaia-v19-stateful-steps.yml
  # test-upgrade-release-testnet:
  #   needs: set-version-matrix
  #   strategy:
  #     matrix:
  #       ${{ fromJSON(needs.set-version-matrix.outputs.upgrade_versions) }}
  #     fail-fast: false
  #     #max-parallel: 3
  #   with:
  #     runs-on-os: cosmos-runner-set
  #     gaia_version: ${{ matrix.gaia_version }}
  #     upgrade_version: ${{ matrix.upgrade_version }}
  #     env_name: major-upgrade-theta-stateful-workflow
  #     archive_url: https://files.polypore.xyz/archived-state/theta-testnet/latest_v18.tar.gz
  #   uses: ./.github/workflows/upgrade-gaia-v19-stateful-steps.yml
  # test-upgrade-ics-testnet:
  #   needs: set-version-matrix
  #   strategy:
  #     matrix:
  #       ${{ fromJSON(needs.set-version-matrix.outputs.upgrade_versions) }}
  #     fail-fast: false
  #     #max-parallel: 3
  #   with:
  #     runs-on-os: cosmos-runner-set
  #     gaia_version: ${{ matrix.gaia_version }}
  #     upgrade_version: ${{ matrix.upgrade_version }}
  #     env_name: major-upgrade-ics-stateful-workflow
  #     archive_url: https://files.polypore.xyz/archived-state/ics-testnet-provider/latest_v18.tar.gz
  #   uses: ./.github/workflows/upgrade-gaia-v19-stateful-steps.yml
